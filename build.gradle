plugins {
	id 'java'
	id 'io.spring.dependency-management' version '1.1.0'
	id  'com.diffplug.spotless' version "6.14.1"
	id 'jacoco'
	id "org.sonarqube" version "3.5.0.2730"

}

group = 'today.stepbeyond.examples'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}



jacocoTestReport {
	reports {
		xml.enabled true
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "step-beyond_spring-boot-examples"
		property "sonar.organization", "step-beyond"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.pullrequest.github.summary_comment", "true"
		property "sonar.coverage.jacoco.xmlReportPaths", "${project.rootDir}/application/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml"
	}
}

subprojects {
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'com.diffplug.spotless'
	apply plugin: 'org.sonarqube'
	apply plugin: 'jacoco'


	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:2.7.8")
			mavenBom("org.springframework.cloud:spring-cloud-dependencies:2021.0.5")
		}
		dependencies {
			dependency 'com.tngtech.archunit:archunit:1.0.1'
			dependency 'com.tngtech.archunit:archunit-junit5:1.0.1'
		}
	}

	spotless {
		enforceCheck(false)
		ratchetFrom("origin/main")
		format("misc") {
			target("*.gradle", ".gitignore")
			trimTrailingWhitespace()
			indentWithTabs() // or spaces. Takes an integer argument if you don"t like 4
			endWithNewline()
		}
		java {
			// Use the default importOrder configuration
			importOrder()
			googleJavaFormat("1.15.0") //
			removeUnusedImports()// has its own section below
		}
	}

	test {
		finalizedBy jacocoTestReport // report is always generated after tests run
	}

	jacocoTestReport {
		dependsOn test // tests are required to run before generating the report
	}


	group = 'today.stepbeyond.examples'
	sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}

	test {
		useJUnitPlatform()
	}

}

tasks.named('test') {
	useJUnitPlatform()
}
